import dd from "debugdump";

function printvaluetype ($var, $varNameString, $varValueString) {

    // let getVarNam = (obj) => {
    //     return Object.keys(obj)[0];
    //     // return Object.keys(obj);
    // };
    // let $varName = getVarNam($var);
    // let $varValue = $var[$varName];
    // let $evalString = 'var ' + $varNameString + " = " + $varValueString;
    // dd($evalString);


    dd('= Testing : let ' + $varNameString + ' = ' + $varValueString);
    dd('- value of ' + $varNameString + ' = ' + $var);
    dd('- type of ' + $varNameString + ' = ' + typeof $var);

    dd(`- Number.isNaN(${$varNameString})` + ' = ' + Number.isNaN($var));
    dd(`- Number.isInteger(${$varNameString})` + ' = ' + Number.isInteger($var));
    dd(`- Number.isSafeInteger(${$varNameString})` + ' = ' + Number.isSafeInteger($var));
    dd(`- Number.isFinite(${$varNameString})` + ' = ' + Number.isFinite($var));


    dd(`- Array.isArray(${$varNameString})` + ' = ' + Array.isArray($var));
    dd(`- Object.prototype.toString.call(${$varNameString})` + ' = ' + Object.prototype.toString.call($var));

    dd(`- undefined + ${$varNameString} below: `);
    dd(undefined + $var);

    dd(`- 5 + ${$varNameString} below: `);
    dd(5 + $var);

    dd(`- 5 - ${$varNameString} below: `);
    dd(5 - $var);

    dd(`- 5 * ${$varNameString} below: `);
    dd(5 * $var);

    dd(`- 5 / ${$varNameString} below: `);
    dd(5 / $var);
};

export default printvaluetype;